package ru.krlvm.powertunnel.pac;

import ru.krlvm.powertunnel.PowerTunnel;

import java.util.Collection;

/**
 * Generate PAC (Proxy Auto Configuration) files
 * for proxying only necessary requests
 *
 * @author krlvm
 */
public class PACGenerator {

    public static String generatePAC(String serverHost, int serverPort, Collection<String> hosts) {
        final String server = serverHost + ":" + serverPort;

        StringBuilder script = new StringBuilder("/**\nThis file is generated by PowerTunnel\n" + PowerTunnel.REPOSITORY_URL + "\n**/\n");
        script.append("function FindProxyForURL(url, host) { if(");
        int i = 0;
        for (String host : hosts) {
            if(host.startsWith("*")) {
                // We assume it looks like "*.google.com"
                host = host.replaceFirst("\\*", "");
            } else if(!host.startsWith(".")) {
                host = "." + host;
            }
            script.append("(dnsDomainIs(host, \"").append(host).append("\"))");
            if(++i != hosts.size()) {
                script.append(" || ");
            }
        }
        script.append(") return 'PROXY ").append(server).append("'; }");

        return script.toString();
    }
}
